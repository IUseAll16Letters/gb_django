version: "2.1"
services:
  postgres:
    container_name: gb_postgres
    image: postgres:13.3
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=2GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U django_postgres_user -d django_postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
#    deploy:
#      resources:
#        limits:
#          cpus: '1'
#          memory: 1G
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:5.7
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: ${PGADMIN_CONFIG_SERVER_MODE}
    ports:
      - "5050:80"
    restart: unless-stopped
    depends_on:
      - postgres
#    deploy:
#      resources:
#        limits:
#          cpus: '0.5'
#          memory: 1G
    networks:
      - postgres

  redis:
    restart: unless-stopped
    image: redis:7.0.5-alpine 
    depends_on:
      - postgres   
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - postgres

  rabbit:
    container_name: rabbit
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: always
    ports:
       - "127.0.0.1:5672:5672"
       - "15672:15672"
    environment:
      - RABBITMQ_SECURE_PASSWORD=${RABBITMQ_SECURE_PASSWORD}
      - RABBITMQ_LOGS=${RABBITMQ_LOGS}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    depends_on:
      - postgres
    networks:
      - postgres

networks:
  postgres:
    driver: bridge
#  rabbit:
#    driver: bridge
